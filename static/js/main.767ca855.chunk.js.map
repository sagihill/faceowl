{"version":3,"sources":["components/Logo/Logo.png","components/FormInput/FormInput.js","components/CustomButton/CustomButton.js","components/LoadingSpinner/LoadingSpinner.js","pages/SignIn.js","pages/SignUp.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Success/Success.js","pages/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormInput","handleChange","label","otherProps","className","onChange","CustomButton","children","LoadingSpinner","size","color","loading","initialState","email","password","isLoading","SignIn","props","event","target","value","name","setState","handleSubmit","a","async","preventDefault","state","fetch","method","headers","body","JSON","stringify","then","response","json","user","id","sessionStorage","setItem","loadUser","onRouteChange","alert","error","console","log","message","currUser","getItem","this","parse","onSubmit","type","required","onClick","Component","displayName","confirmPassword","SignUp","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","alt","src","owl","Rank","entries","ImageLinkForm","onInputChange","onInputFocus","onInputBlur","onButtonSubmit","onButtonClick","input","handleKeyUp","OnImageUpload","isImageLoaded","onFocus","onKeyUp","accept","placeholder","onBlur","FaceRecognition","imageURL","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Success","document","getElementById","scrollIntoView","React","Hompage","isFaceFound","particlesOptions","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","anim","opacity_min","retina_detect","initialInput","uploadURL","route","isDetectingFaces","joined","App","data","calculateFaceLocation","faceData","image","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","files","FormData","append","loadingImage","file","secure_url","URL","count","Object","assign","catch","err","keyCode","dest","removeItem","bind","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.767ca855.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.a152100e.png\";","import React from 'react';\r\n\r\nconst FormInput = ({handleChange, label, ...otherProps}) => {\r\n    return(\r\n        <div className='group mb2'>\r\n            {\r\n                label ? (\r\n                <label className={`db fw6 lh-copy f4`}>\r\n                    {label}\r\n                </label>\r\n                ) :null\r\n            }\r\n            <input className='br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100' onChange = {handleChange} {...otherProps} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;","import React from 'react';\r\n\r\nconst CustomButton = ({ children,...otherProps}) => {\r\n    return (\r\n        <button className={`mt2 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black grow pointer f4 dib` }{...otherProps} >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"sweet-loading\">\r\n            <PropagateLoader\r\n            className='clip-loader'\r\n            size={15}\r\n            color={\"#fbf1a9\"}\r\n            loading={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { Component } from 'react';\r\nimport FormInput from '../components/FormInput/FormInput';\r\nimport CustomButton from '../components/CustomButton/CustomButton';\r\nimport LoadingSpinnner from '../components/LoadingSpinner/LoadingSpinner';\r\nconst initialState = {\r\n    email: '',\r\n\tpassword: '',\r\n\tisLoading: false\r\n}\r\n\r\nclass SignIn extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\t//first checking if session has a logged user\r\n\tcomponentDidMount() {\r\n\t\tconst currUser = sessionStorage.getItem(\"userLog\");\r\n\t\tif(currUser) {\r\n\t\t\tthis.props.loadUser(JSON.parse(currUser))\r\n\t\t\tthis.props.onRouteChange('home');\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n        const { value, name } = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\thandleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n        try {\r\n            fetch('https://agile-eyrie-66946.herokuapp.com/signin',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t      \t.then(user => {\r\n\t        \tif(user.id){\r\n\t\t\t\t\tsessionStorage.setItem(\"userLog\",JSON.stringify(user));\r\n\t          \t\tthis.props.loadUser(user);\r\n\t          \t\tthis.props.onRouteChange('home');\r\n\t        \t} else {\r\n\t\t\t\t\talert('Wrong credentials!')\r\n\t\t\t\t}\r\n\t\t\t  })\r\n        } catch(error) {\r\n            console.log('error sign in user', error.message);\r\n\t\t}\r\n\t\tthis.setState({...initialState, isLoading: true});\r\n    }\r\n\trender() {\r\n\t\tconst {onRouteChange} = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"flex flex-column flex-wrap\">\r\n\t\t\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv3 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t\t\t<main className=\"pa4 white-80\">\r\n\t\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t<legend className=\"mb2 cool f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t\t\t<form onSubmit = {this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='email' \r\n\t\t\t\t\t\t\t\t\ttype='email' \r\n\t\t\t\t\t\t\t\t\tvalue={this.state.email} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='password' \r\n\t\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\t\tvalue={this.state.password} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t\t\t\t\t<CustomButton type='submit'>Sign In</CustomButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<div className=\"lh-copy mt3\">\r\n\t\t\t\t\t\t\t\t<p onClick = {()=>onRouteChange('register')}  className=\"f6 link dim pointer white db\">Register</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</article>\r\n\t\t\t\t<div className=\"flex flex-column center\">\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.state.isLoading) ? (\r\n\t\t\t\t\t\t<LoadingSpinnner/>\r\n\t\t\t\t\t):\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport FormInput from '../components/FormInput/FormInput.js';\r\nimport CustomButton from '../components/CustomButton/CustomButton.js'\r\nimport LoadingSpinnner from '../components/LoadingSpinner/LoadingSpinner';\r\nconst initialState = {\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n\tconfirmPassword: '',\r\n\tisLoading: false\r\n}\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    }\r\n\r\n\t// this method is the event listener for submiting registration form\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        if(password!==confirmPassword) {\r\n            alert(\"Passwords don't match!\");\r\n            return;\r\n        }\r\n        try {\r\n\t\t\t// fetch call for registering a user at the backend server\r\n            fetch('https://agile-eyrie-66946.herokuapp.com/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: displayName,\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t    })\r\n\t\t\t})\r\n\t\t\t// the server response is the same user object\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\t//loading user\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\t//routing to homepage\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('The email address you have entered is already registered')\r\n\t\t\t\t}\r\n\t\t\t})\r\n        } catch (error) {\r\n\t\t\tconsole.log('error creating user', error.message);\r\n        }\r\n        this.setState({...initialState,isLoading: true});\r\n    }\r\n\r\n\t//event listener for input change\r\n    handleChange = (event) => {\r\n        const { value, name } = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        return (\r\n\t\t\t<div className=\"flex flex-column flex-wrap\">\r\n\t\t\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv3 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t\t\t<main className=\"pa3 white-80\">\r\n\t\t\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t\t<legend className=\"mb2 cool f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t\t\t\t<form className='sign-up-form' onSubmit = {this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='displayName' \r\n\t\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\t\tvalue={displayName} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='email' \r\n\t\t\t\t\t\t\t\t\ttype='email' \r\n\t\t\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='password' \r\n\t\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='confirmPassword' \r\n\t\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\t\tvalue={confirmPassword} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Confirm Password'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t\t\t\t\t<CustomButton type='submit'>Submit</CustomButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</article>\r\n\t\t\t\t<div className=\"flex flex-column center\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.isLoading) ? (\r\n\t\t\t\t\t\t\t<LoadingSpinnner/>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\nexport default SignUp;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\t\tif(isSignedIn){\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signout')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign Out</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signin')} className ='ma2 mt3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign In</p>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('register')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Register</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}\r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport owl from './Logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className ='center ma3 mt0'>\r\n\t\t\t<Tilt options={{ max : 20 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa2\">\r\n \t\t\t\t\t<img alt='Logo' src={owl}/>\r\n \t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = ({name,entries}) => {\r\n\treturn (\r\n\t\t<div className=\"flex flex-column justify-center\">\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name} , your current entry count is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\nimport {Checkmark} from 'react-checkmark';\r\n\r\nconst ImageLinkForm = ({onInputChange,onInputFocus,onInputBlur, onButtonSubmit, onButtonClick ,input, handleKeyUp, OnImageUpload, isImageLoaded}) => {\r\n\treturn (\r\n\t\t<div className ='ma4 mt0'>\r\n\t\t\t<p className='light-yellow f4 mt4 mb3'>\r\n\t\t\t\t{'My Owl will detect faces in your pictures. Give it a shot!'}\r\n\t\t\t</p>\r\n\t\t\t\t<div className='flex flex-row bg-black-10 br2 ba b--black-10 form center pa3 shadow-5'>\r\n\t\t\t\t\t<div className=\"inputs flex flex-column w-75\">\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tclassName='flex f5 light-silver pa2 w-75 center mb3' \r\n\t\t\t\t\t\t\ttype = 'text' \r\n\t\t\t\t\t\t\tvalue = {input}\r\n\t\t\t\t\t\t\tonFocus = {onInputFocus}\r\n\t\t\t\t\t\t\tonKeyUp = {handleKeyUp}\r\n\t\t\t\t\t\t\tonChange = {onInputChange} />\r\n\t\t\t\t\t\t<div className=\"flex flex-row upload-btn-wrapper center grow dib pointer\">\r\n\t\t\t\t\t\t\t<button className=\"btn f5 ph3 pv2 dib white-80 bg-near-black pointer\">Browse for Image</button>\r\n\t\t\t\t\t\t\t<input onClick={onButtonClick} className='upload-input pointer ' type=\"file\" accept=\"image/*\" placeholder=\"Browse\" onChange={OnImageUpload}/>\r\n\t\t\t\t\t\t\t{isImageLoaded ? (\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">\r\n\t\t\t\t\t\t\t\t\t<Checkmark size={40}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t):null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"h-50\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonBlur = {onInputBlur}\r\n\t\t\t\t\t\t\tclassName ='grow f4 link ph5 pv4 dib white-80 bg-near-black'\r\n\t\t\t\t\t\t\tonClick = {onButtonSubmit}\r\n\t\t\t\t\t\t>Detect\r\n\t\t\t\t\t\t</button> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageURL , box }) => {\r\n\treturn (\r\n\t\t<div className ='center ma'>\r\n\t\t\t<div className='absolute mt3 mb3 shadow-3'>\r\n\t\t\t\t<img id='inputimage' alt='' src = {imageURL} width='450px' height='auto' />\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName ='bounding-box' \r\n\t\t\t\t\tstyle={{top: box.topRow , right: box.rightCol, bottom: box.bottomRow , left: box.leftCol}}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass Success extends React.Component {\r\n    componentDidMount() {\r\n        const successSign = document.getElementById(\"success\");\r\n        successSign.scrollIntoView();\r\n    }\r\n\trender() {\r\n        return (\r\n            <div id='success' className='f1 white mb1'>\r\n\t\t\t    <h1 className=\"mv3\">Great Success!</h1>\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport Logo from \"../components/Logo/Logo\";\r\nimport Rank from \"../components/Rank/Rank\";\r\nimport ImageLinkForm from \"../components/ImageLinkForm/ImageLinkForm\";\r\nimport FaceRecognition from \"../components/FaceRecognition/FaceRecognition\";\r\nimport Success from '../components/Success/Success.js';\r\n\r\nconst Hompage = ({name, entries, input, onInputChange, onInputFocus, onInputBlur, onButtonSubmit, onButtonClick, handleKeyUp, OnImageUpload, isFaceFound, box, imageURL, isImageLoaded}) => {\r\n    return(\r\n        <div className=\"flex flex-column flex-wrap mv2\">\r\n            <Logo />\r\n            <Rank\r\n                name = {name}\r\n                entries = {entries}\r\n            />\r\n            <ImageLinkForm\r\n                input ={input}\r\n                onInputChange = {onInputChange}\r\n                onInputFocus={onInputFocus}\r\n                onInputBlur={onInputBlur}\r\n                onButtonSubmit={onButtonSubmit}\r\n                handleKeyUp={handleKeyUp}\r\n                OnImageUpload={OnImageUpload}\r\n                isImageLoaded={isImageLoaded}\r\n                onButtonClick = {onButtonClick}\r\n            />\r\n            {isFaceFound === true ? (\r\n                <div>\r\n                <Success/>\r\n                </div>\r\n            ): null}\r\n            <FaceRecognition box={box} imageURL={imageURL}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hompage;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Hompage from \"./pages/Homepage\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    },\n    line_linked: {\n      enable: false,\n      opacity: 0.02\n    },\n    move: {\n      direction: \"right\",\n      speed: 0.05\n    },\n    size: {\n      value: 1\n    },\n    opacity: {\n      anim: {\n        enable: true,\n        speed: 1,\n        opacity_min: 0.05\n      }\n    }\n  },\n  retina_detect: true\n};\n\nconst initialInput = \"Please paste an image URL here\";\n\n//The empty state - when App is renderd\nconst initialState = {\n  input: initialInput,\n  imageURL: \"\",\n  uploadURL: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  isFaceFound: false,\n  isImageLoaded: false,\n  isDetectingFaces: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n  }\n\n  // a method for loading users. activated through signin signup or cookies\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n\n  //a method for calculating face location in the photo\n  //the input is the response of clarifai api\n  calculateFaceLocation = faceData => {\n    console.log(faceData)\n    //using first face for calculation\n    //can be scaled up for more than one face\n    const image = document.getElementById(\"inputimage\");\n    //getting image dimensions (width is constant but height varies)\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: faceData.left_col * width,\n      rightCol: (1 - faceData.right_col) * width,\n      topRow: faceData.top_row * height,\n      bottomRow: (1 - faceData.bottom_row) * height\n    };\n  };\n  //uses calculateFaceLocation method for box display\n  displayFaceBox = box => {\n    this.setState({ box: box });\n  };\n\n  //an event listener method for input change (when choosing pasting a URL)\n  onInputChange = event => {\n    this.setState({ input: event.target.value});\n  };\n\n  //for clearing the initial input\n  onInputFocus = () => {\n    this.setState({ input: \"\" });\n  };\n\n  //for reintializing input\n  onInputBlur = () => {\n    this.setState({ input: \"Please paste an image URL here\" });\n  };\n\n  //an event listener for upload button (for uploading animation)\n  onButtonClick = () => {\n    this.setState({isImageLoaded: false}) // state for \n  }\n\n  //an event listener for image upload\n  OnImageUpload = async (event) => {\n    const files = event.target.files;\n    const data = new FormData();\n    data.append('file',files[0]);\n    data.append('upload_preset','faceowl');\n    this.setState({loadingImage: true}); // for future loading animation\n    //cloudinary upload api\n    const response = await fetch(\n        'https://api.cloudinary.com/v1_1/dt94ijbsb/image/upload',\n        {\n            method: \"POST\",\n            body: data\n        }\n    )\n    const file = await response.json();\n    this.setState({isImageLoaded: true, uploadURL: file.secure_url});\n\n}\n\n// event listener for handeling the detect option\nonButtonSubmit = () => {\n  //the first few lines chooses proper URL from pasted or uploaded image\n  let URL = \"\";\n  if(this.state.input!==initialInput){\n    URL = this.state.input\n  } else {\n      URL = this.state.uploadURL;\n    }\n    //using setState than invoking callback function for actual detect process\n    // isFaceFound set to false for rerendering success banner\n    this.setState({ imageURL: URL, isFaceFound: false }, () => {\n      //fetch call for server at imageURL route - the clarifai api process\n      fetch(\"https://agile-eyrie-66946.herokuapp.com/imageURL\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          input: this.state.imageURL\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          if (response !== \"unable to work with Clarifai API\") {\n            //if the response is positive (face is found)\n            //this fetch call increments user rank\n            //sending user id\n            //this process can move to backend, using it here for educational purpose\n            fetch(\"https://agile-eyrie-66946.herokuapp.com/image\", {\n              method: \"put\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              //getting user rank\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }));\n              })\n              .catch(console.log);\n              //setting state for rendering success banner\n            this.setState({isFaceFound: true})\n            //invoking the facebox diplay methods\n            this.displayFaceBox(this.calculateFaceLocation(response));\n          } else {\n            this.setState({isFaceFound: false, input: \"Please paste an image URL here\" })\n            alert('Sorry something went wrong, please try again');\n          }\n        })\n        .catch(err => console.log(err));\n      });\n      \n    };\n    \n    // event listener for keyboard submission\n    handleKeyUp = event => {\n      if (event.keyCode === 13) {\n        this.onButtonSubmit();\n      }\n    };\n\n    // method for routing using states\n    // in the future it is possible to use React-Router package\n    // thus removing routing with state management\n    onRouteChange = dest => {\n      if (dest === \"signout\") {\n        //clearing user cookie\n      sessionStorage.removeItem(\"userLog\");\n      this.setState(initialState);\n    } else if (dest === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: dest });\n  };\n  render() {\n    // state abstraction notation\n    const { imageURL, box, route, isSignedIn, isFaceFound, isImageLoaded} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <Hompage\n            name={this.state.user.name}\n            entries={this.state.user.entries}\n            input={this.state.input}\n            onInputChange={this.onInputChange}\n            onInputFocus={this.onInputFocus}\n            onInputBlur={this.onInputBlur}\n            onButtonSubmit={this.onButtonSubmit}\n            handleKeyUp={this.handleKeyUp}\n            OnImageUpload={this.OnImageUpload} \n            box={box} \n            imageURL={imageURL} \n            isFaceFound = {isFaceFound}\n            isImageLoaded = {isImageLoaded}\n            onButtonClick = {this.onButtonClick}\n          />\n        ) : route === \"signin\" || this.state.route === \"signout\" ? (\n          <SignIn \n            loadUser={this.loadUser} \n            onRouteChange={this.onRouteChange} \n          />\n        ) : (\n          <SignUp\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}