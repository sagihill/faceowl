{"version":3,"sources":["components/Logo/Logo.png","components/SignIn/SignIn.js","components/Register/Register.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignIn","onRouteChange","className","id","htmlFor","type","name","onClick","value","Register","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","alt","src","owl","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","FaceRecognition","imageURL","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","size","anim","opacity_min","retina_detect","calculateFaceLovation","faceData","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","dest","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5aea9ead.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.a152100e.png\";","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n\treturn (\r\n\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv6 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 white-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"cool f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt4\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      \tonClick = {()=>onRouteChange('home')}\r\n\t\t\t      \tclassName=\"b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black grow pointer f5 dib\" \r\n\t\t\t      \ttype=\"submit\" \r\n\t\t\t      \tvalue=\"Submit\"\r\n\t\t      \t  />\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p onClick = {()=>onRouteChange('register')}  className=\"f6 link dim pointer white db\">Register</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({onRouteChange}) => {\r\n\treturn (\r\n\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv6 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 white-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"cool f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      \tonClick = {()=>onRouteChange('home')}\r\n\t\t\t      \tclassName=\"b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black grow pointer f5 dib\" \r\n\t\t\t      \ttype=\"submit\" \r\n\t\t\t      \tvalue=\"Submit\"\r\n\t\t      \t  />\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\t\tif(isSignedIn){\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signout')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign Out</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signin')} className ='ma2 mt3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign In</p>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('register')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Register</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}\r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport owl from './Logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className ='center ma3 mt0'>\r\n\t\t\t<Tilt options={{ max : 15 }} style={{ height: 200, width: 200 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa2\">\r\n \t\t\t\t\t<img alt='Logo' src={owl}/>\r\n \t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{'Sagi, your current rank is...'}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{'#5'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div className ='ma4 mt0'>\r\n\t\t\t<p className='f5'>\r\n\t\t\t\t{'My Owl will detect faces in your pictures. Give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='bg-black-10 br2 ba b--black-10 form center pa4 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type ='text' onChange={onInputChange} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName ='w-30 grow f4 link ph3 pv2 dib white-80 bg-near-black'\r\n\t\t\t\t\t\tonClick = {onButtonSubmit}\r\n\t\t\t\t\t>Detect</button> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageURL , box }) => {\r\n\treturn (\r\n\t\t<div className ='center ma'>\r\n\t\t\t<div className='absolute mt2 mb3 shadow-3'>\r\n\t\t\t\t<img id='inputimage' alt='' src = {imageURL} width='450px' height='auto' />\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName ='bounding-box' \r\n\t\t\t\t\tstyle={{top: box.topRow , right: box.rightCol, bottom: box.bottomRow , left: box.leftCol}}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React, {Component} from 'react'\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'ef9d4bc6225d4fbe8e3bf77f4c442504'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n        value: 60,\n        density: {\n            enable: true,\n            value_area: 1000\n        }\n    },\n    line_linked: {\n        enable: false,\n        opacity: 0.02\n    },\n    move: {\n        direction: 'right',\n        speed: 0.05\n    },\n    size: {\n        value: 1\n    },\n    opacity: {\n        anim: {\n            enable: true,\n            speed: 1,\n            opacity_min: 0.05\n        }\n    }\n  },\n  retina_detect: true\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLovation = (faceData) => {\n    const clarifaiFace = faceData.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      rightCol: (1-clarifaiFace.right_col) * width,\n      topRow: clarifaiFace.top_row * height,\n      bottomRow: (1-clarifaiFace.bottom_row)* height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input : event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLovation(response)))\n    .catch(err => console.log(err));\n  }\n  onRouteChange = (dest) => {\n    if(dest==='signout'){\n      this.setState({isSignedIn: false});\n    } else if (dest === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: dest});\n  }\n  render() {\n    const {imageURL,box,route,isSignedIn} = this.state ;\n    return (\n      <div className=\"App\">\n        <Particles \n          className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn ={isSignedIn} onRouteChange ={this.onRouteChange} />\n        {route === 'home'\n          ? <div className = 'mv6'>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition \n                box={box} \n                imageURL={imageURL}\n              />\n            </div>\n          : (\n              ((route === 'signin') ||  this.state.route === 'signout')\n              ? <SignIn onRouteChange ={this.onRouteChange}/>\n              : <Register onRouteChange ={this.onRouteChange}/>\n            )\n        }\n      </div>     \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}