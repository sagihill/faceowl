{"version":3,"sources":["components/Logo/Logo.png","components/SignIn/SignIn.js","components/Register/Register.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","onRouteChange","this","className","htmlFor","onChange","type","name","onClick","React","Component","Register","onNameChange","onSubmitRegister","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","alt","src","owl","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageURL","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","size","anim","opacity_min","retina_detect","initialState","input","route","joined","App","data","calculateFaceLocation","faceData","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","console","log","count","Object","assign","catch","err","dest","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eeaa780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.a152100e.png\";","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('http://localhost:8080/signin',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t      \t.then(user => {\r\n\t        \tif(user.id){\r\n\t          \t\tthis.props.loadUser(user);\r\n\t          \t\tthis.props.onRouteChange('home');\r\n\t        \t}\r\n      })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {onRouteChange} = this.props;\r\n\t\treturn (\r\n\t\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv6 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 white-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"cool f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt4\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t\t        onChange={this.onEmailChange} \r\n\t\t\t\t\t        className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" \r\n\t\t\t\t\t        type=\"email\" \r\n\t\t\t\t\t        name=\"email-address\"  \r\n\t\t\t\t\t        id=\"email-address\"\r\n\t\t\t        \t/>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input\r\n\t\t\t\t        \tonChange={this.onPasswordChange} \r\n\t\t\t\t\t        className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" \r\n\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t        name=\"password\"  \r\n\t\t\t\t\t        id=\"password\"\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      \tonClick = {this.onSubmitSignIn}\r\n\t\t\t\t      \tclassName=\"b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black grow pointer f5 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Submit\"\r\n\t\t\t      \t  />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick = {()=>onRouteChange('register')}  className=\"f6 link dim pointer white db\">Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\tonSubmitRegister = () => {\r\n\t\tfetch('http://localhost:8080/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className=\"bg-black-10 br3 ba b--black-10 mv6 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 white-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"cool f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input\r\n\t\t\t\t        \tonChange = {this.onNameChange} \r\n\t\t\t\t\t        className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" \r\n\t\t\t\t\t        type=\"text\" \r\n\t\t\t\t\t        name=\"name\"  \r\n\t\t\t\t\t        id=\"name\"\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tonChange = {this.onEmailChange}\r\n\t\t\t\t\t        className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" \r\n\t\t\t\t\t        type=\"email\" \r\n\t\t\t\t\t        name=\"email-address\"  \r\n\t\t\t\t\t        id=\"email-address\"\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t    \t    onChange = {this.onPasswordChange}\r\n\t\t\t\t\t        className=\"br1 shadow-3 pa2 input-reset ba bg-transparent hover-bg-near-black hover-white b--black-60 w-100\" \r\n\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t        name=\"password\"  \r\n\t\t\t\t\t        id=\"password\"\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      \tonClick = {this.onSubmitRegister}\r\n\t\t\t\t      \tclassName=\"b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black grow pointer f5 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Submit\"\r\n\t\t\t      \t  />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\t\tif(isSignedIn){\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signout')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign Out</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex' , justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('signin')} className ='ma2 mt3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Sign In</p>\r\n\t\t\t\t\t<p onClick={()=>onRouteChange('register')} className ='ma2 mt3 mr3 b shadow-3 ph3 pv2 input-reset ba b--black white-80 bg-near-black dim pointer f5 dib'> Register</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}\r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport owl from './Logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className ='center ma3 mt0'>\r\n\t\t\t<Tilt options={{ max : 15 }} style={{ height: 200, width: 200 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa2\">\r\n \t\t\t\t\t<img alt='Logo' src={owl}/>\r\n \t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = ({name,entries}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name} , your current entry count is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div className ='ma4 mt0'>\r\n\t\t\t<p className='f5'>\r\n\t\t\t\t{'My Owl will detect faces in your pictures. Give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='bg-black-10 br2 ba b--black-10 form center pa4 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type ='text' onChange={onInputChange} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName ='w-30 grow f4 link ph3 pv2 dib white-80 bg-near-black'\r\n\t\t\t\t\t\tonClick = {onButtonSubmit}\r\n\t\t\t\t\t>Detect</button> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageURL , box }) => {\r\n\treturn (\r\n\t\t<div className ='center ma'>\r\n\t\t\t<div className='absolute mt2 mb3 shadow-3'>\r\n\t\t\t\t<img id='inputimage' alt='' src = {imageURL} width='450px' height='auto' />\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName ='bounding-box' \r\n\t\t\t\t\tstyle={{top: box.topRow , right: box.rightCol, bottom: box.bottomRow , left: box.leftCol}}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React, {Component} from 'react'\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n        value: 60,\n        density: {\n            enable: true,\n            value_area: 1000\n        }\n    },\n    line_linked: {\n        enable: false,\n        opacity: 0.02\n    },\n    move: {\n        direction: 'right',\n        speed: 0.05\n    },\n    size: {\n        value: 1\n    },\n    opacity: {\n        anim: {\n            enable: true,\n            speed: 1,\n            opacity_min: 0.05\n        }\n    }\n  },\n  retina_detect: true\n}\n\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (faceData) => {\n    const clarifaiFace = faceData.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      rightCol: (1-clarifaiFace.right_col) * width,\n      topRow: clarifaiFace.top_row * height,\n      bottomRow: (1-clarifaiFace.bottom_row)* height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input : event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n    fetch('http://localhost:8080/imageURL',{\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:8080/image',{\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n        })\n        .catch(console.log)\n\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (dest) => {\n    if(dest==='signout'){\n      this.setState(initialState);\n    } else if (dest === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: dest});\n  }\n  render() {\n    const {imageURL,box,route,isSignedIn} = this.state ;\n    return (\n      <div className=\"App\">\n        <Particles \n          className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn ={isSignedIn} onRouteChange ={this.onRouteChange} />\n        {route === 'home'\n          ? <div className = 'mv6'>\n              <Logo />\n              <Rank name = {this.state.user.name} entries = {this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition \n                box={box} \n                imageURL={imageURL}\n              />\n            </div>\n          : (\n              ((route === 'signin') ||  this.state.route === 'signout')\n              ? <SignIn loadUser = {this.loadUser} onRouteChange ={this.onRouteChange}/>\n              : <Register loadUser = {this.loadUser} onRouteChange ={this.onRouteChange}/>\n            )\n        }\n      </div>     \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}