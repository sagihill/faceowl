{"version":3,"sources":["assets/owl.svg","components/FormInput/FormInput.js","components/CustomButton/CustomButton.js","pages/SignInSignUp/SignIn/SignIn.js","pages/SignInSignUp/SignUp/SignUp.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/GreetAndTries/GreetAndTries.js","components/Exp/Exp.js","components/UrlInput/UrlInput.js","components/BrowseButtonInput/BrowseButtonInput.js","components/FaceRecognitionPanel/FaceRecognitionPanel.js","components/Success/Success.js","components/FaceRecognitionImage/FaceRecognitionImage.js","pages/Homepage/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormInput","handleChange","label","otherProps","className","placeholder","onChange","replace","toLowerCase","CustomButton","children","initialState","email","password","isLoading","SignIn","props","event","target","value","name","setState","handleSubmit","preventDefault","state","fetch","method","headers","body","JSON","stringify","then","response","json","user","id","sessionStorage","setItem","loadUser","onRouteChange","alert","catch","err","console","log","currUser","getItem","this","parse","onSubmit","type","required","Component","displayName","confirmPassword","SignUp","handleSubmitFormer","a","error","message","handleLoginAnimation","Navigation","isSignedIn","onClick","Logo","isButtonSubmitted","options","max","alt","src","owl","GreetAndTries","entries","Number","Exp","UrlInput","BrowseButtonInput","loadingImage","OnImageUpload","onButtonClick","accept","FaceRecognitionPanel","onInputChange","onInputBlur","onButtonSubmit","input","handleKeyUp","onKeyUp","onBlur","Success","document","getElementById","scrollIntoView","React","FaceRecognitionImage","imageURL","box","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Hompage","onInputFocus","isFaceFound","isImageLoaded","isDetectingFaces","uploadURL","route","imageFile","joined","App","data","calculateFaceLocation","faceData","image","left_col","right_col","top_row","bottom_row","displayFaceBox","files","uploadFileId","lastModified","size","stateFileId","FormData","append","secure_url","URL","count","Object","assign","keyCode","dest","removeItem","bind","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0634b90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/owl.010100dd.svg\";","import React from 'react';\r\nimport './FormInput.style.css';\r\nimport '../../fonts/Linearicons-Free-v1.0.0/icon-font.min.css'\r\n\r\n\r\nconst FormInput = ({handleChange, label, ...otherProps}) => {\r\n    return(\r\n        <div className=\"form-input-container\">\r\n            <input className=\"form-input\" placeholder={label} onChange = {handleChange} {...otherProps}/>\r\n            <span className=\"focus-form-input\"></span>\r\n            <span className=\"symbol-form-input\">\r\n                <span className={\"lnr lnr-\"+label.replace(\" \",\"\").toLowerCase()}></span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport './CustomButton.css'\r\n\r\nconst CustomButton = ({ children,...otherProps}) => {\r\n    return (\r\n        <button className={`button` }{...otherProps} >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CustomButton;","import React, { Component } from 'react';\r\nimport FormInput from '../../../components/FormInput/FormInput';\r\nimport CustomButton from '../../../components/CustomButton/CustomButton';\r\nimport '../shared.style.css';\r\nimport './SignIn.style.css';\r\n\r\nconst initialState = {\r\n    email: '',\r\n\tpassword: '',\r\n\tisLoading: false\r\n}\r\n\r\nclass SignIn extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\t//first checking if session has a logged user\r\n\tcomponentDidMount() {\r\n\t\tconst currUser = sessionStorage.getItem(\"userLog\");\r\n\t\tif(currUser) {\r\n\t\t\tthis.props.loadUser(JSON.parse(currUser))\r\n\t\t\tthis.props.onRouteChange('home');\r\n\t\t}\r\n\t}\r\n\r\n\t// an event handler for form change\r\n\t// the input is the textbox input\r\n\t// the output is setting the proper form state\r\n\thandleChange = (event) => {\r\n        const { value, name } = event.target\r\n        this.setState({ [name]: value })\r\n\t}\r\n\t\r\n\t//an event handler for the form submission process\r\n\t// invoking the signin backend process\r\n\t// the input is the form submit\r\n\t// the output is setting the user and route state\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password } = this.state;\r\n\t\tthis.setState({isLoading: true}, ()=> {\r\n\t\t\tfetch('https://agile-eyrie-66946.herokuapp.com/signin',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif(user.id) {\r\n\t\t\t\t\tsessionStorage.setItem(\"userLog\",JSON.stringify(user));\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t  } else {\r\n\t\t\t\t  alert('Wrong credentials!')\r\n\t\t\t\t  this.setState({isLoading: false});\r\n\t\t\t  }\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t\t});\r\n\t}\r\n\r\n\t//an event handler for the form submission process\r\n\t// invoking the signin backend process\r\n\t// the input is the form submit\r\n\t// the output is setting the user and route state\r\n\t// handleSubmitFormer = async (event) => {\r\n\t// \tevent.preventDefault();\r\n\t// \tthis.handleLoginAnimation()\r\n    //     const { email, password } = this.state;\r\n    //     try {\r\n    //         fetch('https://agile-eyrie-66946.herokuapp.com/signin',{\r\n\t// \t\tmethod: 'post',\r\n\t// \t\theaders: {'Content-Type': 'application/json'},\r\n\t// \t\tbody: JSON.stringify({\r\n\t// \t\t\temail: email,\r\n\t// \t\t\tpassword: password\r\n\t// \t\t})\r\n\t// \t})\r\n\t// \t\t.then(response => response.json())\r\n\t//       \t.then(user => {\r\n\t//         \tif(user.id){\r\n\t// \t\t\t\tsessionStorage.setItem(\"userLog\",JSON.stringify(user));\r\n\t//           \t\tthis.props.loadUser(user);\r\n\t//           \t\tthis.props.onRouteChange('home');\r\n\t//         \t} else {\r\n\t// \t\t\t\talert('Wrong credentials!')\r\n\t// \t\t\t}\r\n\t// \t\t  })\r\n    //     } catch(error) {\r\n    //         console.log('error sign in user', error.message);\r\n\t// \t}\r\n\t// \tthis.setState({...initialState});\r\n    // }\r\n\trender() {\r\n\t\tconst {email, password, isLoading} = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"signin-signup-page-container\">\r\n\t\t\t\t<article className=\"signin-signup-page-card\">\r\n\t\t\t\t\t<div className='signin-signup-form-container'>\r\n\t\t\t\t\t\t<div className='company-trademark'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisLoading ? (\r\n\t\t\t\t\t\t\t\t<div className='company-logo rolling-owl'></div>\r\n\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t<div className='company-logo'></div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<div className=\"company-name\">faceOwl</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sign-in-request\">Login to your Account</div>\r\n\t\t\t\t\t\t<form className='inputs-form' onSubmit = {this.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\tname='email' \r\n\t\t\t\t\t\t\t\ttype='email' \r\n\t\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\tname='password' \r\n\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CustomButton type='submit'>Login</CustomButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"side-container\">\r\n\t\t\t\t\t\t<h1 className='side-greeting'>\r\n\t\t\t\t\t\t\tWelcome Back!\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<span className='side-span-info'>\r\n\t\t\t\t\t\tWe are so happy you decided to come back. Here my faceOwl will help you discover faces in your pictures.\r\n\t\t\t\t\t\t<br></br>If you haven't joined us yet, just click the register button and\r\n\t\t\t\t\t\tfill out the short registration form, then my faceOwl will do some magic.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport FormInput from '../../../components/FormInput/FormInput.js';\r\nimport CustomButton from '../../../components/CustomButton/CustomButton.js'\r\nimport '../shared.style.css';\r\nimport './SignUp.style.css';\r\n\r\nconst initialState = {\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n\tconfirmPassword: '',\r\n\tisLoading: false\r\n}\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n\t}\r\n\t\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\r\n\t\t//frontend password check\r\n        if(password!==confirmPassword) {\r\n            alert(\"Passwords don't match!\");\r\n            return;\r\n        }\r\n\t\tthis.setState({isLoading: true}, ()=> {\r\n\t\t\tfetch('https://agile-eyrie-66946.herokuapp.com/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: displayName,\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t    })\r\n\t\t\t})\r\n\t\t\t// the server response is the same user object\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\t//loading user\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\t//routing to homepage\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({isLoading: false});\r\n\t\t\t\t\talert('The email address you have entered is already registered')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t\t});\r\n\t}\r\n\r\n\t// this method is the event listener for submiting registration form\r\n\t// invoking the register backend process\r\n\t// the input is the form submit\r\n\t// the output is setting the user and route state\r\n    handleSubmitFormer = async (event) => {\r\n        event.preventDefault();\r\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\r\n\t\t//frontend password check\r\n        if(password!==confirmPassword) {\r\n            alert(\"Passwords don't match!\");\r\n            return;\r\n        }\r\n        try {\r\n\t\t\t// fetch call for registering a user at the backend server\r\n            fetch('https://agile-eyrie-66946.herokuapp.com/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: displayName,\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t    })\r\n\t\t\t})\r\n\t\t\t// the server response is the same user object\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\t//loading user\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\t//routing to homepage\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('The email address you have entered is already registered')\r\n\t\t\t\t}\r\n\t\t\t})\r\n        } catch (error) {\r\n\t\t\tconsole.log('error creating user', error.message);\r\n        }\r\n        this.setState({...initialState});\r\n    }\r\n\r\n\t// an event handler for form change\r\n\t// the input is the textbox input\r\n\t// the output is setting the proper form state\r\n    handleChange = (event) => {\r\n        const { value, name } = event.target\r\n        this.setState({ [name]: value })\r\n\t}\r\n\r\n\thandleLoginAnimation = () => {\r\n\t\tthis.setState({isLoading: true})\r\n\t}\r\n\r\n    render() {\r\n        const { displayName, email, password, confirmPassword, isLoading } = this.state;\r\n        return (\r\n\t\t\t<div className=\"signin-signup-page-container\">\r\n\t\t\t\t<article className=\"signin-signup-page-card\">\r\n\t\t\t\t\t<div className='signin-signup-form-container'>\r\n\t\t\t\t\t\t<div className='company-trademark'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisLoading ? (\r\n\t\t\t\t\t\t\t\t<div className='company-logo rolling-owl'></div>\r\n\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t<div className='company-logo'></div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<div className=\"company-name\">faceOwl</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sign-up-request\">Create an Account</div>\r\n\t\t\t\t\t\t<form className='inputs-form' onSubmit = {this.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\t\tname='displayName' \r\n\t\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\t\tvalue={displayName} \r\n\t\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\tname='email' \r\n\t\t\t\t\t\t\t\ttype='email' \r\n\t\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\tname='password' \r\n\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormInput \r\n\t\t\t\t\t\t\t\tname='confirmPassword' \r\n\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\tvalue={confirmPassword} \r\n\t\t\t\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tlabel='Confirm Password'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CustomButton type='submit'>Submit</CustomButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"side-container\">\r\n\t\t\t\t\t\t<h1 className='side-greeting'>\r\n\t\t\t\t\t\t\tGlad to see You!\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<span className='side-span-info'>\r\n\t\t\t\t\t\t\tWe are so happy you decided to join us, you won't regret it.<br></br> Just fill out the registration form and \r\n\t\t\t\t\t\t\tstart an amazing experience. my faceOwl is so excited, it can't wait to start help you discover facs in your \r\n\t\t\t\t\t\t\tpictures, lets GO!\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;","import React from 'react';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport './Navigation.style.css';\r\n\r\n//navigation is responsive to current route\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\t\tif(isSignedIn){\r\n\t\t\treturn (\r\n\t\t\t\t<nav className='navbar navbar-homepage'>\r\n\t\t\t\t\t<CustomButton className='navbar-button' onClick={()=>onRouteChange('signout')}>Sign Out</CustomButton>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<nav className='navbar navbar-login-register'>\r\n\t\t\t\t\t<CustomButton className='navbar-button navbar-button-login' onClick={()=>onRouteChange('signin')}>Login</CustomButton>\r\n\t\t\t\t\t<CustomButton className='navbar-button navbar-button-register' onClick={()=>onRouteChange('register')}>Register</CustomButton>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t}\r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport owl from '../../assets/owl.svg';\r\nimport './Logo.css';\r\n\r\nconst Logo = ({isButtonSubmitted}) => {\r\n\treturn (\r\n\t\t<div className ='logo-container'>\r\n\t\t\t<Tilt className='tilt' options={{ max : 20 }}>\r\n\t\t\t\t\t {\r\n\t\t\t\t\t\t(!isButtonSubmitted) ? (\r\n\t\t\t\t\t\t\t<img className='' alt='Logo' src={owl}/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<img className='rolling-owl' alt='Logo' src={owl}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\t\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './GreetAndTries.css';\r\n\r\nconst GreetAndTries = ({name,entries}) => {\r\n\treturn (\r\n\t\t<div className=\"greet_and_tries-container\">\r\n\t\t\t<div className='greet-name'>\r\n\t\t\t\t{`Dear ${name}`}\r\n\t\t\t</div>\r\n\t\t\t{ (Number(entries)===0) ? (\t\r\n\t\t\t\t<div className='tries-hurray-container'>\r\n\t\t\t\t\t<div className='tries-container'>\r\n\t\t\t\t\t\t Try finding faces in your pictures.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='greet-hurray'>\r\n\t\t\t\t\t\tit is AMAZING!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t) : (\r\n\t\t\t\t<div className='tries-hurray-container'> \r\n\t\t\t\t\t<div className='tries-container'>\r\n\t\t\t\t\t\t{`You have reached ${entries} tries already.`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='greet-hurray'>\r\n\t\t\t\t\t\tYou Rock!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GreetAndTries;","import React from 'react';\r\nimport './Exp.css';\r\n\r\nconst Exp = () => {\r\n\treturn (\r\n\t\t<div className='exp-container'>\r\n            <div className='exp-big'>\r\n                I can find faces in your pictures\r\n            </div>\r\n            <div className='exp-small'>\r\n                Just paste an image url or browse for one from your device, press find and than I'll do some magic.\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Exp;","import React from 'react';\r\nimport './UrlInput.style.css';\r\nimport '../../fonts/Linearicons-Free-v1.0.0/icon-font.min.css'\r\n\r\n\r\nconst UrlInput = ({handleChange, label, ...otherProps}) => {\r\n    return(\r\n        <div className=\"url-input-container\">\r\n            <input className=\"url-input\" placeholder={label} onChange = {handleChange} {...otherProps}/>\r\n            <span className=\"focus-anim-url-input\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UrlInput;","import React from 'react';\r\nimport './BrowseButtonInput.style.css'\r\n\r\nconst BrowseButtonInput = ({loadingImage, OnImageUpload, onButtonClick}) => {\r\n    return (\r\n        <div className='browse_button_input-container'>\r\n            {!loadingImage ? (\r\n                <input\r\n                    className='normal-browse-button'\r\n                    name='browseImage' \r\n                    type='file' \r\n                    onClick={onButtonClick}\r\n                    accept=\"image/*\" \r\n                    placeholder=\"Browse\" \r\n                    onChange={OnImageUpload}\r\n                />\r\n            ) : (\r\n                <input\r\n                    className='loading-browse-button'\r\n                    name='browseImage' \r\n                    type='file' \r\n                    onClick={onButtonClick}\r\n                    accept=\"image/*\" \r\n                    placeholder=\"Loading\" \r\n                    onChange={OnImageUpload}\r\n                />\r\n            )\r\n            }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default BrowseButtonInput;","import React from 'react';\r\nimport './FaceRecognitionPanel.css';\r\nimport UrlInput from '../UrlInput/UrlInput';\r\nimport BrowseButtonInput from '../BrowseButtonInput/BrowseButtonInput';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\n\r\nconst FaceRecognitionPanel = ({onInputChange,onInputBlur, onButtonSubmit, onButtonClick ,input, handleKeyUp, OnImageUpload, loadingImage, isButtonSubmitted}) => {\r\n\treturn (\r\n\t\t<div className ='face_recognition_panel-container'>\r\n            <div className='url_input-browse_button_input-container'>\r\n                    <UrlInput\r\n                        name='linkInput' \r\n                        type='text' \r\n                        value={input} \r\n                        handleChange = {onInputChange}\r\n                        onKeyUp = {handleKeyUp}\r\n                        label='Paste image URL here'\r\n                        required\r\n                    />\r\n                    <BrowseButtonInput \r\n                        OnImageUpload = {OnImageUpload} \r\n                        loadingImage = {loadingImage}\r\n                        onButtonClick = {onButtonClick}\r\n                    />\r\n            </div>\r\n            <CustomButton className='find-button' onClick = {onButtonSubmit} onBlur = {onInputBlur} type='submit'>Find</CustomButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognitionPanel;","import React from 'react';\r\nimport './Success.style.css';\r\n\r\nclass Success extends React.Component {\r\n    componentDidMount() {\r\n        const successSign = document.getElementById(\"success\");\r\n        successSign.scrollIntoView();\r\n    }\r\n\trender() {\r\n        return (\r\n            <div className='success-container'>\r\n                <div id='success'>Great Success!</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport './FaceRecognitionImage.css';\r\n\r\nconst FaceRecognitionImage = ({ imageURL , box }) => {\r\n\treturn (\r\n\t\t<div className='face_recognition_image-outer-container'>\r\n\t\t\t<div className='face_recognition_image-container'>\r\n\t\t\t\t{\r\n\t\t\t\t\t(imageURL!=='')? (\r\n\t\t\t\t\t\t<img className='face_recognition_image' id='inputimage' alt='' src = {imageURL} width='auto' height='auto'/>\r\n\t\t\t\t\t):null\r\n\t\t\t\t}\r\n\t\t\t\t<div className ='bounding-box' \r\n\t\t\t\t\tstyle={{top: box.topRow , right: box.rightCol, bottom: box.bottomRow , left: box.leftCol}}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>               \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognitionImage;","import React from 'react';\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport GreetAndTries from \"../../components/GreetAndTries/GreetAndTries\";\r\nimport Exp from \"../../components/Exp/Exp\";\r\nimport FaceRecognitionPanel from \"../../components/FaceRecognitionPanel/FaceRecognitionPanel\";\r\nimport Success from '../../components/Success/Success.js';\r\nimport FaceRecognitionImage from \"../../components/FaceRecognitionImage/FaceRecognitionImage\";\r\nimport './Homepage.style.css'\r\n\r\nconst Hompage = ({name, entries, input, onInputChange, onInputFocus, onInputBlur, onButtonSubmit, onButtonClick, handleKeyUp, OnImageUpload, isFaceFound, box, imageURL, isImageLoaded, loadingImage, isDetectingFaces, isButtonSubmitted}) => {\r\n    return(\r\n        <div className=\"homepage-container\">\r\n            <div className='homepage-card'>\r\n                <div className='logo-greet_and_tries-container'> {/* left side */}\r\n                    <Logo isButtonSubmitted = {isButtonSubmitted}/>\r\n                    <GreetAndTries name = {name} entries = {entries}/>\r\n                </div>\r\n                <div className='exp-face_recognition_panel-container'> {/* right side */}\r\n                    <Exp/>\r\n                    <FaceRecognitionPanel\r\n                        input ={input}\r\n                        onInputChange = {onInputChange}\r\n                        onInputFocus={onInputFocus}\r\n                        onInputBlur={onInputBlur}\r\n                        onButtonSubmit={onButtonSubmit}\r\n                        handleKeyUp={handleKeyUp}\r\n                        OnImageUpload={OnImageUpload}\r\n                        isImageLoaded={isImageLoaded}\r\n                        loadingImage ={loadingImage}\r\n                        onButtonClick = {onButtonClick}\r\n                        isButtonSubmitted = {isButtonSubmitted}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {\r\n                (isDetectingFaces) ? (\r\n                    <div className='success-face_recognition_image-container'>\r\n                        {isFaceFound === true ? (\r\n                            <Success/>\r\n                        ): null}\r\n                            <FaceRecognitionImage box={box} imageURL={imageURL}/>\r\n                    </div>\r\n                ): null\r\n            }\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default Hompage;","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport SignIn from \"./pages/SignInSignUp/SignIn/SignIn\";\nimport SignUp from './pages/SignInSignUp/SignUp/SignUp';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Hompage from './pages/Homepage/Homepage';\n\n//The empty state - when App is renderd\nconst initialState = {\n  input: \"\",\n  imageURL: \"\",\n  uploadURL: \"\",\n  box: {},\n  route: \"signin\",  //  change back to ---> route: \"signin\",\n  isSignedIn: false, // change back to ---> isSignedIn: false,\n  isFaceFound: false,\n  loadingImage: false,\n  isButtonSubmitted: false,\n  imageFile: [],\n  isDetectingFaces: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\n//This is the main class App which holds the majority of the logical side of the application\n// It also contains and builds the state of the app\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n  }\n\n  // a method for loading users. activated through signin, signup or session storage\n  // the input data is a user object. \n  // the output is setting the user state\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n\n  //a method for calculating face location in the photo\n  //the input is the response of clarifai api\n  //the output is a css object notation for box display\n  calculateFaceLocation = faceData => {\n    //using first face for calculation\n    //can be scaled up for more than one face\n    const image = document.getElementById(\"inputimage\");\n    //getting image dimensions (width is constant but height varies)\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: faceData.left_col * width,\n      rightCol: (1 - faceData.right_col) * width,\n      topRow: faceData.top_row * height,\n      bottomRow: (1 - faceData.bottom_row) * height\n    };\n  };\n\n  //uses calculateFaceLocation method for box display\n  //input is the css object notaion \n  displayFaceBox = box => {\n    console.log(box);\n    this.setState({ box: box, isButtonSubmitted: false});\n  };\n\n  //an event listener method for input change (when choosing pasting a URL)\n  onInputChange = event => {\n    this.setState({ input: event.target.value, uploadURL: \"\", imageFile: []});\n    console.log(event.target.value);\n  };\n\n  //for reintializing input\n  onInputBlur = () => {\n    this.setState({ input: \"\" });\n  };\n\n  //an event listener for upload button (for uploading animation)\n  onButtonClick = (event) => {\n    const imageInput = event.target;\n    imageInput.value = '';\n    this.setState({isImageLoaded: false}) // state for \n  }\n\n  //an event listener for image upload\n  // input is the upload event\n  // output is setting the upload URL state\n  OnImageUpload = (event) => {\n    const files = event.target.files;\n    const uploadFileId = [files[0].lastModified, files[0].size];\n    const stateFileId = [this.state.imageFile.lastModified, this.state.imageFile.size];\n    if(stateFileId[0]===uploadFileId[0] && stateFileId[1]===uploadFileId[1]){\n      alert(\"Try to upload another image my friend\");\n      return;\n    }\n    this.setState({loadingImage: true , imageFile: files[0], isFaceFound: false, input: \"\", isDetectingFaces: false}, () => {\n      const data = new FormData();\n      data.append('file',this.state.imageFile);\n      data.append('upload_preset','faceowl');\n      console.log(\"uploading\");\n      //cloudinary upload api\n      fetch(\n          'https://api.cloudinary.com/v1_1/dt94ijbsb/image/upload',\n          {\n              method: \"POST\",\n              body: data\n          }\n      )\n      .then(response => response.json())\n      .then(response => {\n        this.setState({loadingImage: false,  uploadURL: response.secure_url});\n      })\n    });\n  }\n\n// event listener for handeling the detect option\n// when invoked the face recognition process is started\nonButtonSubmit = () => {\n  //the first few lines chooses proper URL from pasted or uploaded image\n  // this is to deal with the case of both pasted and uploaded image url\n  let URL = \"\";\n  if(this.state.input!==\"\"){\n    URL = this.state.input\n  } else {\n      URL = this.state.uploadURL;\n    }\n    console.log(URL);\n    if(URL===this.state.imageURL && URL!==''){\n      alert(\"Please try a new image my friend\");\n      return;\n    }\n    //using setState than invoking callback function for actual detect process\n    // isFaceFound set to false for rerendering the Success banner\n    this.setState({ imageURL: URL, isFaceFound: false, box: {}, isDetectingFaces: true, isButtonSubmitted: true}, () => {\n      //fetch call for server at imageURL route - the clarifai api process\n      fetch(\"https://agile-eyrie-66946.herokuapp.com/imageURL\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          input: this.state.imageURL\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          //this is the response written by me in the backend side when the API response is\n          // an error of some sort (no face/bad url)\n          if (response !== \"unable to work with Clarifai API\") {\n            //if the response is positive (face is found)\n            //this fetch call increments user rank\n            //sending user id\n            //this process can move to backend, using it here for educational purpose\n            fetch(\"https://agile-eyrie-66946.herokuapp.com/image\", {\n              method: \"put\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              //getting user rank\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }));\n              })\n              .catch(console.log);\n              //setting state for rendering success banner\n            this.setState({isFaceFound: true, isButtonSubmitted: false}, () => {\n              //invoking the facebox diplay methods\n              this.displayFaceBox(this.calculateFaceLocation(response));\n            })\n          } else {\n            this.setState({isFaceFound: false, input: \"\", isButtonSubmitted: false, isDetectingFaces: false})\n            alert('Sorry something went wrong, please try again');\n          }\n        })\n        .catch(err => console.log(err));\n    });\n      \n};\n    \n    // event listener for keyboard submission\n    // enabling enter button submission\n    handleKeyUp = event => {\n      if (event.keyCode === 13) {\n        this.onButtonSubmit();\n      }\n    };\n\n    // method for routing using states\n    // in the future it is possible to use React-Router package\n    // thus removing routing with state management\n    // the input is the destination page\n    // the output is setting the proper route\n    onRouteChange = dest => {\n      if (dest === \"signout\") {\n        //clearing user cookie\n      sessionStorage.removeItem(\"userLog\");\n      this.setState(initialState);\n    } else if (dest === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: dest });\n  };\n  render() {\n    // state abstraction notation\n    const { imageURL, box, route, isSignedIn, isFaceFound, loadingImage, isDetectingFaces,  isButtonSubmitted} = this.state;\n    return (\n      <div className={`App ${!isDetectingFaces ? \"overflow\" : \"\"}`}>\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <Hompage\n            name={this.state.user.name}\n            entries={this.state.user.entries}\n            input={this.state.input}\n            onInputChange={this.onInputChange}\n            onInputFocus={this.onInputFocus}\n            onInputBlur={this.onInputBlur}\n            onButtonSubmit={this.onButtonSubmit}\n            handleKeyUp={this.handleKeyUp}\n            OnImageUpload={this.OnImageUpload} \n            box={box} \n            imageURL={imageURL} \n            isFaceFound = {isFaceFound}\n            isDetectingFaces = {isDetectingFaces}\n            isButtonSubmitted = {isButtonSubmitted}\n            loadingImage = {loadingImage}\n            onButtonClick = {this.onButtonClick}\n          /> \n        ) : route === \"signin\" || route === \"signout\" ? (\n          <SignIn \n            loadUser={this.loadUser} \n            onRouteChange={this.onRouteChange} \n          />\n        ) : (\n          <SignUp\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}